{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red13\green16\blue20;
}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c5928\c7896\c10234;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # This command indicates that the script should be interpreted and executed using the Bash shell\
#!/bin/bash\
\
# This command updates all the packages on the server to their latest versions\
sudo yum update -y\
\
# This series of commands installs the Apache web server, enables it to start on boot, and then starts the server immediately\
sudo yum install -y httpd\
sudo systemctl enable httpd \
sudo systemctl start httpd\
\
# This command installs PHP along with several necessary extensions for the application to run\
sudo dnf install -y \\\
php \\\
php-pdo \\\
php-openssl \\\
php-mbstring \\\
php-exif \\\
php-fileinfo \\\
php-xml \\\
php-ctype \\\
php-json \\\
php-tokenizer \\\
php-curl \\\
php-cli \\\
php-fpm \\\
php-mysqlnd \\\
php-bcmath \\\
php-gd \\\
php-cgi \\\
php-gettext \\\
php-intl \\\
php-zip\
\
## These commands Installs MySQL version 8\
# Install the MySQL Community repository\
sudo wget https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm \
#\
# Install the MySQL server\
sudo dnf install -y mysql80-community-release-el9-1.noarch.rpm\
sudo rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2023\
dnf repolist enabled | grep "mysql.*-community.*"\
sudo dnf install -y mysql-community-server \
#\
# Start and enable the MySQL server\
sudo systemctl start mysqld\
sudo systemctl enable mysqld\
\
# This command enables the 'mod_rewrite' module in Apache on an EC2 Linux instance. It allows the use of .htaccess files for URL rewriting and other directives in the '/var/www/html' directory\
sudo sed -i '/<Directory "\\/var\\/www\\/html">/,/<\\/Directory>/ s/AllowOverride None/AllowOverride All/' /etc/httpd/conf/httpd.conf\
\
# Environment Veriable\
S3_BUCKET_NAME=\AppleTypeServices\AppleTypeServicesF65539 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 tifes-project-webfiles\AppleTypeServices \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
# This command downloads the contents of the specified S3 bucket to the '/var/www/html' directory on the EC2 instance\
sudo aws s3 sync s3://"$S3_BUCKET_NAME" /var/www/html\
\
# This command changes the current working directory to '/var/www/html', which is the standard directory for hosting web pages on a Unix-based server\
cd /var/www/html\
\
# This command is used to extract the contents of the application code zip file that was previously downloaded from the S3 bucket\
sudo unzip shopwise.zip\
\
# This command recursively copies all files, including hidden ones, from the 'shopwise' directory to the '/var/www/html/'\
sudo cp -R shopwise/. /var/www/html/\
\
# This command permanently deletes the 'shopwise' directory and the 'shopwise.zip' file.\
sudo rm -rf shopwise shopwise.zip\
\
# This command set permissions 777 for the '/var/www/html' directory and the 'storage/' directory\
sudo chmod -R 777 /var/www/html\
sudo chmod -R 777 storage/\
\
# This command will open th vi editor and allow you to edit the .env file to add your database credentials \
sudo vi .env\
\
# This command will restart the Apache server\
sudo service httpd restart}